"""Brands, Races and Series models

Revision ID: c425329370eb
Revises:
Create Date: 2025-04-21 16:20:27.852735

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c425329370eb"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "brands",
        sa.Column("_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.PrimaryKeyConstraint("_id"),
    )
    op.create_table(
        "distances",
        sa.Column("_id", sa.UUID(), nullable=False),
        sa.Column("kilometers", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("_id"),
    )
    op.create_table(
        "series",
        sa.Column("_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("_id"),
    )
    op.create_table(
        "races",
        sa.Column("_id", sa.UUID(), nullable=False),
        sa.Column("full_name", sa.String(length=100), nullable=False),
        sa.Column("fixed_date", sa.Date(), nullable=True),
        sa.Column("series_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["series_id"],
            ["series._id"],
        ),
        sa.PrimaryKeyConstraint("_id"),
    )
    op.create_table(
        "series_editions",
        sa.Column("_id", sa.UUID(), nullable=False),
        sa.Column("series_id", sa.UUID(), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["series_id"],
            ["series._id"],
        ),
        sa.PrimaryKeyConstraint("_id"),
    )
    op.create_table(
        "race_editions",
        sa.Column("_id", sa.UUID(), nullable=False),
        sa.Column("race_id", sa.UUID(), nullable=False),
        sa.Column("series_edition_id", sa.UUID(), nullable=True),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("date_time", sa.DateTime(), nullable=False),
        sa.Column("location", sa.String(length=256), nullable=False),
        sa.Column("sponsor_id", sa.UUID(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "COMING_SOON",
                "OPEN",
                "SOLD_OUT",
                "IN_PROGRESS",
                "FINISHED",
                name="raceeditionstatus",
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["race_id"],
            ["races._id"],
        ),
        sa.ForeignKeyConstraint(
            ["series_edition_id"],
            ["series_editions._id"],
        ),
        sa.ForeignKeyConstraint(
            ["sponsor_id"],
            ["brands._id"],
        ),
        sa.PrimaryKeyConstraint("_id"),
    )
    op.create_table(
        "race_edition_distances",
        sa.Column("distance_id", sa.UUID(), nullable=False),
        sa.Column("race_edition_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["distance_id"],
            ["distances._id"],
        ),
        sa.ForeignKeyConstraint(
            ["race_edition_id"],
            ["race_editions._id"],
        ),
        sa.PrimaryKeyConstraint("distance_id", "race_edition_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("race_edition_distances")
    op.drop_table("race_editions")
    op.drop_table("series_editions")
    op.drop_table("races")
    op.drop_table("series")
    op.drop_table("distances")
    op.drop_table("brands")
    # ### end Alembic commands ###
